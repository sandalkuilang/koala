<UserControl x:Class="Koala.Views.Master.SizeList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converter="clr-namespace:Koala.ViewModels.ValidationRules"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <Grid>
        <Grid VerticalAlignment="Stretch">
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Grid.LayoutTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                Background="{DynamicResource HeaderMenu}" 
                BorderThickness="0,1,0,1"  
                BorderBrush="{StaticResource BorderContent}">
                <Grid Margin="10 0 0 0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <!-- Command here -->
                        <Button Margin="0 0 10 5" BorderThickness="0" Width="70"
                            Height="Auto" Background="Transparent" Foreground="#D15948" 
                            diag:PresentationTraceSources.TraceLevel="High">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="26" Height="26" Margin="0,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Center"  Source="../../Images/create_new-26.png"/>
                                <TextBlock FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.FontWeight="Normal">New</TextBlock>
                            </StackPanel>
                            
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding Path=CreateCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <DataGrid x:Name="grid" 
                  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False" 
                  ItemsSource="{Binding Path=Source}"
                  GridLinesVisibility="Horizontal">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Path=EditCommand}" 
                                               CommandParameter="{Binding ElementName=grid, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit"
                              Command="{Binding Path=EditCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                        <Separator />
                        <MenuItem Header="Delete"
                              Command="{Binding Path=DeleteCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTemplateColumn CanUserResize="False">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=DataContext.CheckedHeader, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                CommandParameter="{Binding Path=DataContext.CheckedHeader, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}" Margin="9 0 0 0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding ElementName=grid, Path=SelectedItem}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="ID" IsReadOnly="True" Width="80" Binding="{Binding Id}" />
                    <DataGridTextColumn Header="Description" IsReadOnly="True" Width="450" Binding="{Binding Description}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
